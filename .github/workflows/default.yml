name: Default Pipeline

on:
  push:
    tags:
      - v*
    paths-ignore:
      - 'examples/**'
      - 'docs/**'
      - '.dockerignore'
      - '.gitignore'
      - '.golangci.yaml'
      - '**.md'
      - 'LICENSE'
      - 'Taskfile.yaml'
  pull_request:
    paths-ignore:
      - 'examples/**'
      - 'docs/**'
      - '.dockerignore'
      - '.gitignore'
      - '.golangci.yaml'
      - '**.md'
      - 'LICENSE'
      - 'Taskfile.yaml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ~1.20
          cache: false

      - name: Run Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52.0

  gotest:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v4
        with:
          go-version: ~1.20

      - name: Download Go modules
        run: go mod download
        env:
          GOPROXY: https://proxy.golang.org

      - name: Run Tests
        run: go test ./...

  docker-build:
    needs: [golangci, gotest]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,latest

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}